/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package appbantrangsuc.views;

import appbantrangsuc.AppBanTrangSuc;
import appbantrangsuc.Const;
import appbantrangsuc.controller.SanPhamController;
import appbantrangsuc.models.SanPham;
import appbantrangsuc.models.TaiKhoanNguoiDung;
import appbantrangsuc.views.interfaces.FormListener;
import appbantrangsuc.widget.FormItemView;
import appbantrangsuc.widget.ItemView;
import appbantrangsuc.widget.ListView;
import appbantrangsuc.widget.AdapterPanel;
import appbantrangsuc.widget.BaseForm;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.function.Consumer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JScrollPane;

/**
 *
 * @author vipvl
 */
public class MainDisplayScreen extends BaseForm implements ViewResult {

    /**
     * Creates new form MainDisplayScreen
     */
    private final SanPhamController sanPhamController;
    private final List<SanPham> list = new ArrayList<>();
    private final AdapterPanel containPanel;
    private boolean isShowSetting = false;
    private int settingWidth = 0;

    public MainDisplayScreen() {
        sanPhamController = new SanPhamController(this);
        initComponents();
        settingWidth = settingPanel.getWidth();
        setViewSign();
        settingPanel.setVisible(false);
        containPanel = new AdapterPanel();
        System.out.println("" + new Point(listView1.getPreferredSize().width, listView1.getPreferredSize().height).toString());
        containPanel.setPreferredSize(new Dimension(listView1.getWidth(), listView1.getHeight()));
        containPanel.setLocation(0, 0);
        listView1.setViewportView(containPanel);
        this.setLocationRelativeTo(null);
        this.setResizable(true);
        this.containPanel.spanCount = 3;
        sanPhamController.queryAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customPanel2 = new appbantrangsuc.widget.CustomPanel();
        jLabel1 = new javax.swing.JLabel();
        menuPanel = new appbantrangsuc.widget.CustomPanel();
        signoutBtn = new javax.swing.JButton();
        settingsBtn = new javax.swing.JButton();
        settingPanel = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        addAccount = new javax.swing.JButton();
        signInBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        listView1 = new appbantrangsuc.widget.ListView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 0));
        setForeground(new java.awt.Color(0, 102, 0));

        customPanel2.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setBackground(new java.awt.Color(102, 255, 102));
        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Make Color Shop");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        menuPanel.setBackground(new java.awt.Color(255, 255, 255));

        signoutBtn.setBackground(new java.awt.Color(255, 0, 0));
        signoutBtn.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        signoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        signoutBtn.setText("Đăng Xuất");
        signoutBtn.setBorderPainted(false);
        signoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signout(evt);
            }
        });

        settingsBtn.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        settingsBtn.setText("Cài Đặt");
        settingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminSettings(evt);
            }
        });

        settingPanel.setBackground(new java.awt.Color(255, 153, 51));
        settingPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 0, true));

        addBtn.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        addBtn.setText("Thêm Sản Phẩm");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddClick(evt);
            }
        });

        addAccount.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        addAccount.setText("Thêm Tài Khoản");
        addAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddAccountClick(evt);
            }
        });

        javax.swing.GroupLayout settingPanelLayout = new javax.swing.GroupLayout(settingPanel);
        settingPanel.setLayout(settingPanelLayout);
        settingPanelLayout.setHorizontalGroup(
            settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addAccount)
                .addGap(12, 12, 12)
                .addComponent(addBtn)
                .addContainerGap())
        );
        settingPanelLayout.setVerticalGroup(
            settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        signInBtn.setBackground(new java.awt.Color(0, 255, 0));
        signInBtn.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        signInBtn.setText("Đăng Nhập");
        signInBtn.setBorderPainted(false);
        signInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSignInClick(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addGap(0, 486, Short.MAX_VALUE)
                .addComponent(settingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingsBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signoutBtn)
                .addGap(9, 9, 9)
                .addComponent(signInBtn)
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(settingsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signInBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout customPanel2Layout = new javax.swing.GroupLayout(customPanel2);
        customPanel2.setLayout(customPanel2Layout);
        customPanel2Layout.setHorizontalGroup(
            customPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(customPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        customPanel2Layout.setVerticalGroup(
            customPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        refreshBtn.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        refreshBtn.setText("Tải lại");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRefresh(evt);
            }
        });

        listView1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        listView1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        listView1.setPreferredSize(getPreferredSize());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(customPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 970, Short.MAX_VALUE)
                        .addComponent(refreshBtn))
                    .addComponent(listView1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(customPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(refreshBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listView1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signout
        // TODO add your handling code here:
        new LoginForm(false).setVisible(true);
        dispose();
    }//GEN-LAST:event_signout

    private void adminSettings(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminSettings
        // TODO add your handling code here:
        settingPanel.setVisible(!settingPanel.isVisible());
    }//GEN-LAST:event_adminSettings

    private void onAddClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddClick
        // TODO add your handling code here:
        AddForm addForm = new AddForm();
        addForm.setListener((JFrame form, Object... objects) -> {
            sanPhamController.addSanPham((SanPham) objects[0]);
            form.dispose();
        });
        addForm.setVisible(true);
    }//GEN-LAST:event_onAddClick

    private void onRefresh(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRefresh
        // TODO add your handling code here:
        sanPhamController.queryAll();
    }//GEN-LAST:event_onRefresh

    private void onAddAccountClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddAccountClick
        // TODO add your handling code here:
        new SignUpForm(true).setVisible(true);
    }//GEN-LAST:event_onAddAccountClick

    private void onSignInClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSignInClick
        // TODO add your handling code here:
        LoginForm loginForm = new LoginForm(true);
        loginForm.setListener(new LoginForm.LoginListener() {
            @Override
            public void onSuccess() {
                setViewSign();
            }

            @Override
            public void onFailed() {
            }
        });
        loginForm.setVisible(true);
    }//GEN-LAST:event_onSignInClick

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAccount;
    private javax.swing.JButton addBtn;
    private appbantrangsuc.widget.CustomPanel customPanel2;
    private javax.swing.JLabel jLabel1;
    private appbantrangsuc.widget.ListView listView1;
    private appbantrangsuc.widget.CustomPanel menuPanel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JPanel settingPanel;
    private javax.swing.JButton settingsBtn;
    private javax.swing.JButton signInBtn;
    private javax.swing.JButton signoutBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onViewResultSuccess(int key, Object... data) {
        if (key == Const.SP_QUERY_ALL) {
            list.clear();
            list.addAll((Collection<? extends SanPham>) data[0]);
            List<MyItemView> itemViewForms = new ArrayList<>();
            list.forEach((SanPham sp) -> {
                MyItemView uItemView = new MyItemView(sp, new MyItemView.OnItemClick() {
                    @Override
                    public void onClick(Component view) {
                        XemSanPham.getInstance(sp, sanPhamController).setVisible(true);

                    }

                    @Override
                    public void onDelete(Component view) {
                        sanPhamController.delete(sp);
                    }

                    @Override
                    public void onUpdate(Component view) {
                        UpdateForm updateForm = new UpdateForm(sp);
                        updateForm.setListener(new FormListener() {
                            @Override
                            public void onFormResult(JFrame form, Object... objects) {
                                sanPhamController.udpateSanPham((SanPham)objects[0],(SanPham) objects[1]);
                                form.dispose();
                            }
                            
                        });
                        updateForm.setVisible(true);
                    }
                    
                    
                });
                
                itemViewForms.add(uItemView);
            });
            this.containPanel.updateList(itemViewForms);
            this.listView1.revalidate();
        }
        if (key == Const.SP_QUERY_INSERT) {
            sanPhamController.queryAll();
        }
        if (key == Const.SP_QUERY_UPDATE) {
            System.out.println("update done");
            sanPhamController.queryAll();

        }
        if (key == Const.SP_QUERY_DELETE) {
            System.out.println("delete done");
            sanPhamController.queryAll();

        }
    }

    @Override
    public void onViewResultFailed(String mess) {
    }

    private void setViewSign() {
        if (AppBanTrangSuc.isAdmin) {
            this.settingsBtn.setVisible(true);
        } else {
            this.settingsBtn.setVisible(false);
        }
        if (TaiKhoanNguoiDung.getInstance().getTaiKhoan() == null) {
            signoutBtn.setVisible(false);
            signInBtn.setVisible(true);
        } else {
            signoutBtn.setVisible(true);
            signInBtn.setVisible(false);
        }
        menuPanel.invalidate();
    }
//    Thread threadSettings;
//
//    Runnable runnableSetting = new Runnable() {
//        @Override
//        public void run() {
//            double drawInterval = 1000000000 / 120;
//            double nextTime = System.nanoTime() + drawInterval;
//            int width = settingPanel.getWidth();
//            int startPoint = 0;
//            if (isShowSetting) {
//                startPoint = 0;
//            }
//            else {
//                startPoint = width;
//            }
//            while (threadSettings != null) {
//                if (isShowSetting) {
//                    if (startPoint < width) {
//                        settingPanel.setSize(startPoint, settingPanel.getHeight());
//                        startPoint++;
//                        settingPanel.invalidate();
//                    } else {
//                        threadSettings = null;
//                        return;
//                    }
//                }
//                else {
//                    if (startPoint > 0) {
//                        settingPanel.setSize(startPoint, settingPanel.getHeight());
//                        startPoint--;
//                        settingPanel.invalidate();
//                    } else {
//                        threadSettings = null;
//                        return;
//                    }
//                }
//
//                try {
//                    double remainTime = nextTime - System.nanoTime();
//                    remainTime /= 1000000;
//                    if (remainTime < 0) {
//                        remainTime = 0;
//                    }
//
//                    Thread.sleep((long) remainTime);
//                    nextTime += drawInterval;
//
//                } catch (InterruptedException e) {
//                }
//
//            }
//        }
//    };
//
//    private void settingsShowAnimation() {
//        threadSettings = new Thread(runnableSetting);
//        threadSettings.start();
//    }
}
